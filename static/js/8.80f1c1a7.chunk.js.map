{"version":3,"sources":["components/logo.png","components/StoreDetails.js","pages/PrintInvoice.js","api-service.js"],"names":["columns","field","headerName","width","StoreDetails","props","setTitle","useState","stores","setStores","useCookies","token","userInfo","useEffect","API","getStoreList","then","resp","json","data","console","log","forEach","item","i","id","catch","e","error","parseInt","split","to","style","display","justifyContent","flexDirection","minWidth","height","rows","components","Toolbar","GridToolbar","Invoices","invoiceDetails","setInvoiceDetails","loading","setLoading","setError","a","location","state","invoiceid","getInvoice","status","statusText","invoice","src","companylogo","alt","invoiceNo","store","userFullName","storeName","addressLine1","addressLine2","city","zipCode","border","items","map","shipDate","orderDate","orderNo","customer","description","amount","subTotal","discount","taxrate","total","APIROOT","fetch","method","headers","body","JSON","stringify","credentials"],"mappings":"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","file":"static/js/8.80f1c1a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2cf1827a.png\";","import '../App.css';\r\nimport React, {useState, useEffect} from 'react'\r\nimport { DataGrid, GridToolbar, GridRowsProp, GridColDef } from '@material-ui/data-grid';\r\nimport API from '../api-service'\r\nimport { useCookies } from 'react-cookie'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst columns = [\r\n  { field: 'storeName', headerName: 'Store Name', width: 150 },\r\n  { field: 'storeCode', headerName: 'Store Code', width: 150 },\r\n  { field: 'emailAddress', headerName: 'Email Address', width: 150 },\r\n  { field: 'addressLine1', headerName: 'Addres Line 1', width: 150 },\r\n  { field: 'addressLine2', headerName: 'Adress Line 2', width: 150 },\r\n  { field: 'city', headerName: 'City', width: 150 },\r\n  { field: 'state', headerName: 'State', width: 150 },\r\n  { field: 'zipCode', headerName: 'Zip Code', width: 150 }\r\n];\r\n\r\nfunction StoreDetails(props){\r\n\r\n  props.setTitle('Stores');\r\n\r\n  //{ id: 1, storeCode: 'dummy1', storeName: 'dummy store' },\r\n  //{ id: 2, storeCode: 'dummy2', storeName: 'dummy store2' }\r\n  const [stores, setStores] = useState([]);\r\n  \r\n  const [token] = useCookies(['mr-token']);\r\n  const [userInfo] = useCookies(['mr-user']);\r\n\r\n  useEffect(() => {\r\n    API.getStoreList(token['mr-token'])\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      // client permission to filter only his store, is handled in api\r\n      data.forEach((item, i) => item.id = i+1);\r\n      \r\n      return setStores(data);\r\n    })\r\n    .catch(e => {console.log(\"api error\"); console.error(e)});\r\n  }, []\r\n  );\r\n\r\n  if(!token['mr-token'])\r\n    return (<Redirect to='/signin'></Redirect>);\r\n  if(parseInt(userInfo['mr-user'].split('-')[1])==2)\r\n    return (<Redirect to='/'></Redirect>);\r\n  return(\r\n    <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-start', flexDirection: 'column'}}>\r\n      <div style={{  width: '100%', minWidth:'600px', height: \"calc(100vh - 100px\"}}>\r\n        <DataGrid rows={stores} columns={columns} components={{\r\n          Toolbar: GridToolbar,\r\n        }} />\r\n      </div>\r\n    </div>      \r\n  );\r\n}\r\n\r\nexport default StoreDetails;\r\n","import API from '../api-service';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { DataGrid, GridToolbar, setGridPageStateUpdate} from '@material-ui/data-grid';\r\nimport { useCookies } from 'react-cookie';\r\nimport { Redirect } from 'react-router-dom';\r\nimport companylogo from '../components/logo.png';\r\nimport StoreDetails from '../components/StoreDetails';\r\n\r\nexport default function Invoices(props){\r\n\r\n  const [token] = useCookies(['mr-token']);\r\n  const [invoiceDetails, setInvoiceDetails] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    (async () => {\r\n      if(!props.location.state){\r\n        console.log('did not recieve invoice id');\r\n        setError(true);\r\n        return;\r\n      }\r\n      try{\r\n        const id = props.location.state.invoiceid;\r\n        console.log('invoice id ',id);\r\n        const resp = await API.getInvoice(token['mr-token'], id);\r\n        if(resp.status!=200)\r\n          throw `invalid status ${resp.status} ${resp.statusText}`;\r\n        \r\n        const invoice = await resp.json();\r\n        console.log(invoice);\r\n        setInvoiceDetails(invoice);\r\n        setLoading(false);\r\n      }\r\n      catch(e){\r\n        console.log(\"api error\");\r\n        console.error(e);\r\n        setError(true);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  if(!token['mr-token'])\r\n    return (<Redirect to='/signin'></Redirect>);\r\n  if(error)\r\n    return (<h2>Something Went Wrong</h2>);\r\n  if(loading){\r\n    return (<div>Loading. Please wait.</div>);\r\n  }\r\n  return(\r\n    <div>\r\n      <h2>Invoice</h2>\r\n      <img src={companylogo} alt='SFM' style={{width:\"120px\"}}></img>\r\n      <h4>InvoiceNumber</h4><div>{invoiceDetails.invoiceNo}</div>\r\n      <div>\r\n        <h4>SFM Dropshipping</h4>\r\n        <p>My company address line 1</p>\r\n        <p>My company address line 2</p>\r\n        <p>My company address line 3</p>\r\n        <p>sfmdropshipping@gmail.com</p>\r\n        <p>9988776655</p>\r\n      </div>\r\n\r\n      <div>\r\n        <h4>Billed To</h4>        \r\n        {invoiceDetails.store && <p>{invoiceDetails.store.userFullName}</p>}\r\n        <p>{invoiceDetails.storeName}</p>\r\n        {invoiceDetails.store && <p>{invoiceDetails.store.addressLine1}</p>}\r\n        {invoiceDetails.store && <p>{invoiceDetails.store.addressLine2}</p>}\r\n        {invoiceDetails.store && <p>{invoiceDetails.store.city}, {invoiceDetails.store.state}</p>}\r\n        {invoiceDetails.store && <p>{invoiceDetails.store.zipCode}</p>}\r\n      </div>\r\n\r\n      <table style={{ width: '90%', border: '1px solid black'}}>\r\n        <tr>\r\n          <th>Ship Date</th>\r\n          <th>Order Date</th>\r\n          <th>Order Number</th>\r\n          <th>Customer</th>\r\n          <th>Description</th>\r\n          <th>Amount</th>\r\n        </tr>\r\n        {invoiceDetails.items.map(i => (\r\n          <tr key={i.id}>\r\n            <td>{i.shipDate}</td>\r\n            <td>{i.orderDate}</td>\r\n            <td>{i.orderNo}</td>\r\n            <td>{i.customer}</td>\r\n            <td>{i.description}</td>\r\n            <td>{i.amount}</td>\r\n          </tr>\r\n        ))}\r\n        <tr>\r\n          <td></td><td></td><td></td><td></td>\r\n          <td>Subtotal</td>\r\n          <td>{invoiceDetails.subTotal}</td>\r\n        </tr>\r\n        <tr>\r\n          <td></td><td></td><td></td><td></td>\r\n          <td>Discount</td>\r\n          <td>{invoiceDetails.discount}</td>\r\n        </tr>\r\n        <tr>\r\n          <td></td><td></td><td></td><td></td>\r\n          <td>Tax Rate</td>\r\n          <td>{invoiceDetails.taxrate}</td>\r\n        </tr>\r\n        <tr>\r\n          <td></td><td></td><td></td><td></td>\r\n          <td>Tax</td>\r\n          <td>{(invoiceDetails.subTotal - invoiceDetails.discount)*invoiceDetails.taxrate*0.01}</td>\r\n        </tr>\r\n        <tr>\r\n          <td></td><td></td><td></td><td></td>\r\n          <td>Total</td>\r\n          <td>$ {invoiceDetails.total}</td>\r\n        </tr>\r\n      </table>\r\n      \r\n\r\n    </div>\r\n  );\r\n}","export const APIROOT = 'https://sfm-dropshipping.herokuapp.com';\r\n//export const APIROOT = 'http://127.0.0.1:8000';\r\n\r\nexport default class API{\r\n  static getProductList(token){\r\n    return fetch(APIROOT + '/api/products/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static getProduct(token, id){\r\n    return fetch(APIROOT + '/api/products/' + id + '/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static addProduct(token, data){\r\n    return fetch(APIROOT + '/api/products/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static updateProduct(token, id, data){\r\n    return fetch(APIROOT + '/api/products/' + id + '/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static deleteProduct(token, id){\r\n    return fetch(APIROOT + '/api/products/' + id + '/', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n    })\r\n  }\r\n\r\n  static getStoreList(token){\r\n    return fetch(APIROOT + '/api/stores/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static getPurchasesList(token){\r\n    return fetch(APIROOT + '/api/purchases/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static getPurchase(token, id){\r\n    return fetch(APIROOT + '/api/purchases/' + id + '/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static addPurchase(token, data){\r\n    return fetch(APIROOT + '/api/purchases/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static updatePurchase(token, id, data){\r\n    return fetch(APIROOT + '/api/purchases/' + id + '/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static deletePurchase(token, id){\r\n    return fetch(APIROOT + '/api/purchases/' + id + '/', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n    })\r\n  }\r\n\r\n  static getInventoryList(token){\r\n    return fetch(APIROOT + '/api/inventory/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    }).then(resp => resp.json())\r\n  }\r\n\r\n  static getOrderList(token){\r\n    return fetch(APIROOT + '/api/orders/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    }).then(resp => resp.json())\r\n  }\r\n\r\n  static getPrintingList(token){\r\n    return fetch(APIROOT + '/api/printing/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    }).then(resp => resp.json())\r\n  }\r\n\r\n  static getOrder(token, id){\r\n    return fetch(APIROOT + '/api/orders/' + id + '/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static addOrder(token, data){\r\n    return fetch(APIROOT + '/api/orders/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static deleteOrder(token, id){\r\n    return fetch(APIROOT + '/api/orders/' + id + '/', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n    })\r\n  }\r\n\r\n  static updateOrder(token, id, data){\r\n    return fetch(APIROOT + '/api/orders/' + id + '/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static getInvoiceList(token){\r\n    return fetch(APIROOT + '/api/invoices/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static getInvoice(token, id){\r\n    return fetch(APIROOT + '/api/invoices/' + id + '/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static generateInvoices(token, data){\r\n    return fetch(APIROOT + '/api/invoices/generate_invoices/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static uploadOrdersFile(token, data){\r\n    return fetch(APIROOT + '/api/orders/import_ordersfile/',\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n        headers: {\r\n          // 'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Token ${token}`\r\n        },\r\n\t\t\t\tbody: data,\r\n\t\t\t}\r\n\t\t)\r\n  }\r\n\r\n  static uploadShippingFile(token, data){\r\n    return fetch(APIROOT + '/api/orders/import_shippingfile/',\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n        headers: {\r\n          // 'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Token ${token}`\r\n        },\r\n\t\t\t\tbody: data,\r\n\t\t\t}\r\n\t\t)\r\n  }\r\n\r\n  static uploadPurchasesFile(token, data){\r\n    return fetch(APIROOT + '/api/purchases/import_file/',\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n        headers: {\r\n          // 'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Token ${token}`\r\n        },\r\n\t\t\t\tbody: data,\r\n\t\t\t}\r\n\t\t)\r\n  }\r\n\r\n  static uploadProductsFile(token, data){\r\n    return fetch(APIROOT + '/api/products/import_file/',\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n        headers: {\r\n          // 'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Token ${token}`\r\n        },\r\n\t\t\t\tbody: data,\r\n\t\t\t}\r\n\t\t)\r\n  }\r\n\r\n  static getOverview(token, data){\r\n    return fetch(APIROOT + '/api/orders/get_overview/',\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static signinUser(credentials){\r\n    return fetch(APIROOT + '/api-token-auth/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(credentials)\r\n    })\r\n  }\r\n\r\n  static getAccountDetails(token, id){\r\n    return fetch(APIROOT + '/api/accounts/' + id + '/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static updateProfile(token, id, data){\r\n    return fetch(APIROOT + '/api/accounts/update_profile/' + id + '/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static changePassword(token, id, data){\r\n    return fetch(APIROOT + '/api/accounts/change_password' + id + '/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n}"],"sourceRoot":""}