{"version":3,"sources":["pages/Signin.js","api-service.js"],"names":["Copyright","variant","color","align","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","useState","username","setUsername","password","setPassword","errormsg","setErrormsg","useCookies","token","setToken","useEffect","console","log","window","location","component","maxWidth","className","onSubmit","e","preventDefault","API","signinUser","then","resp","catch","error","required","fullWidth","id","label","name","value","autoComplete","onChange","target","autoFocus","type","control","container","item","xs","mt","APIROOT","fetch","method","headers","json","credentials","body","JSON","stringify"],"mappings":"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","file":"static/js/7.e914f02d.chunk.js","sourcesContent":["import React, {useState, useContext, useEffect, useRef} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport API from '../api-service'\r\nimport { FormLabel } from '@material-ui/core';\r\nimport { useCookies} from 'react-cookie';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        SFM Dropshipping\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errormsg, setErrormsg] = useState('');\r\n\r\n  const [token, setToken] = useCookies(['mr-token']);\r\n\r\n  useEffect( () => {    \r\n    console.log(token);\r\n    if(token['mr-token']) window.location.href = \"/#/products\";\r\n  }, [token]);\r\n\r\n  const signinClicked = (e) => {\r\n    e.preventDefault();\r\n    API.signinUser({username, password})\r\n    .then(resp => {if (resp.token) setToken('mr-token', resp.token); else setErrormsg(\"unable to contact server\");})\r\n    .catch(error => {console.error(error);setErrormsg(\"invalid username or password\")});\r\n  }\r\n\r\n  return (    \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={signinClicked}>\r\n          {errormsg && <FormLabel error={true} >Invalid username or password</FormLabel>}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            value={username}\r\n            autoComplete=\"email\"\r\n            onChange={ (e) => setUsername(e.target.value)}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={ (e) => setPassword(e.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}            \r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","export const APIROOT = 'https://sfm-dropshipping.herokuapp.com';\r\n//export const APIROOT = 'http://127.0.0.1:8000';\r\n\r\nexport default class API{\r\n  static getProducts(token){\r\n    return fetch(APIROOT + '/api/products/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    }).then(resp => resp.json())\r\n  }\r\n\r\n  static signinUser(credentials){\r\n    return fetch(APIROOT + '/auth/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(credentials)\r\n    }).then(resp => resp.json())\r\n  }\r\n}"],"sourceRoot":""}