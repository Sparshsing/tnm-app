{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["loading","className","Signin","React","lazy","TheLayout","App","CookiesProvider","Suspense","fallback","exact","path","name","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"qPAKMA,EACJ,qBAAKC,UAAU,iBAAf,iCAMIC,EAASC,IAAMC,MAAK,kBAAM,8DAC1BC,EAAYF,IAAMC,MAAK,kBAAM,8DAkBpBE,MAhBf,WAEE,OACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,UACM,cAAC,IAAMC,SAAP,CAAgBC,SAAUT,EAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,UAAUC,KAAK,aAAaC,OAAQ,SAAAC,GAAK,OAAI,cAACZ,EAAD,eAAYY,OAC3E,cAAC,IAAD,CAAOH,KAAK,IAAIC,KAAK,OAAOC,OAAQ,SAAAC,GAAK,OAAI,cAACT,EAAD,eAAeS,iBCX7DC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b8d53c99.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport {HashRouter, Switch, Route} from 'react-router-dom';\nimport {CookiesProvider} from 'react-cookie'\n\nconst loading = (\n  <div className=\"loading-symbol\">\n    Loading Please wait\n  </div>\n)\n\n// Pages\nconst Signin = React.lazy(() => import('./pages/Signin'));\nconst TheLayout = React.lazy(() => import('./components/TheLayout'));\n\nfunction App() {\n\n  return (\n    <CookiesProvider>\n      <HashRouter>\n            <React.Suspense fallback={loading}>\n              <Switch>\n                <Route exact path=\"/signin\" name=\"Login Page\" render={props => <Signin {...props}/>} />              \n                <Route path=\"/\" name=\"Home\" render={props => <TheLayout {...props}/>} />\n              </Switch>\n            </React.Suspense>\n      </HashRouter>\n    </CookiesProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n/* import ReactDOM from 'react-dom';\r\nimport { Route, Switch, Redirect, Link, BrowserRouter} from 'react-router-dom';\r\n// Set up pages using the React Router Link element for navigation - instead of <a></a>\r\nconst App = () => (\r\n  <div>\r\n    <h1>React Router Example</h1>\r\n    <ul role=\"nav\">\r\n      <li><Link to=\"/client\">Client Side</Link></li>\r\n      <li><Link to=\"/server\">Server Side</Link></li>\r\n    </ul>\r\n     \r\n    <div>\r\n      <Route path='/client' component={Client} />\r\n      <Route path='/server' component={Server} />\r\n    </div>\r\n  </div>\r\n)\r\n\r\n// Populate sample pages. \r\nconst Client= () => <h3>What is client side?<body><li>Browser</li><li>Runs on local machine</li><li>React renders user interface</li><li>React Router adds clickable links</li></body></h3>\r\n\r\nconst Server= () => <h3>What is server side?<li>node.js - JavaScript everywhere!</li></h3>\r\n\r\n//Render app into the root HTML DOM node\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>\r\n), document.getElementById('root')); */\r\n"],"sourceRoot":""}