{"version":3,"sources":["pages/Signin.js","api-service.js"],"names":["Copyright","variant","color","align","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","useState","username","setUsername","password","setPassword","errormsg","setErrormsg","loading","setLoading","useCookies","token","setToken","userInfo","setUserInfo","useEffect","to","component","maxWidth","className","onSubmit","e","preventDefault","API","signinUser","then","resp","status","json","data","utype","is_superuser","is_staff","user_id","catch","error","console","String","required","fullWidth","id","label","name","value","autoComplete","onChange","target","autoFocus","type","control","mt","APIROOT","fetch","method","headers","body","JSON","stringify","credentials"],"mappings":"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","file":"static/js/9.f6cb1498.chunk.js","sourcesContent":["import React, {useState, useContext, useEffect, useRef} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport API from '../api-service'\r\nimport { FormLabel } from '@material-ui/core';\r\nimport { useCookies} from 'react-cookie';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { FirstPage } from '@material-ui/icons';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        SFM Dropshipping\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errormsg, setErrormsg] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [token, setToken] = useCookies(['mr-token']);\r\n  const [userInfo, setUserInfo] = useCookies(['mr-user']);\r\n  useEffect( () => {    \r\n    \r\n  }, [token, userInfo]);\r\n\r\n  const signinClicked = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    API.signinUser({username, password})\r\n    .then(resp =>{\r\n      if(resp.status==200)\r\n        return resp.json();\r\n      if(resp.status==400)\r\n        throw 'Invalid username or passord';\r\n      else\r\n        throw 'Something went wrong';\r\n    } )\r\n    .then(data => {\r\n      setLoading(false);\r\n      let utype = 0;\r\n      if(data.is_superuser)\r\n        utype = 1;\r\n      else if(data.is_staff)\r\n        utype = 2;\r\n\r\n      // userinfo needs to be set FirstPage, because async functions no batching, and we need userinfo\r\n      // if token loads late, it will redirect for 1-2 times but it will work, but not with userinfo\r\n      setUserInfo('mr-user',`${data.user_id}-${utype}`);\r\n      setToken('mr-token', data.token);      \r\n      \r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n      setErrormsg(String(error));\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  if(token['mr-token'])\r\n    return (<Redirect to='/'></Redirect>);\r\n  if(loading)\r\n    return (<p>Loading... Please wait.</p>)\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={signinClicked}>\r\n          {errormsg && <FormLabel error={true} >{errormsg}</FormLabel>}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            value={username}\r\n            autoComplete=\"email\"\r\n            onChange={ (e) => setUsername(e.target.value)}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={ (e) => setPassword(e.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}            \r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/*<Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>*/}\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","export const APIROOT = 'https://sfm-dropshipping.herokuapp.com';\r\n//export const APIROOT = 'http://127.0.0.1:8000';\r\n\r\nexport default class API{\r\n  static getProductList(token){\r\n    return fetch(APIROOT + '/api/products/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static getProduct(token, id){\r\n    return fetch(APIROOT + '/api/products/' + id + '/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static addProduct(token, data){\r\n    return fetch(APIROOT + '/api/products/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static updateProduct(token, id, data){\r\n    return fetch(APIROOT + '/api/products/' + id + '/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static deleteProduct(token, id){\r\n    return fetch(APIROOT + '/api/products/' + id + '/', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n    })\r\n  }\r\n\r\n  static getStoreList(token){\r\n    return fetch(APIROOT + '/api/stores/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static getPurchasesList(token){\r\n    return fetch(APIROOT + '/api/purchases/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static getPurchase(token, id){\r\n    return fetch(APIROOT + '/api/purchases/' + id + '/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static addPurchase(token, data){\r\n    return fetch(APIROOT + '/api/purchases/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static updatePurchase(token, id, data){\r\n    return fetch(APIROOT + '/api/purchases/' + id + '/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static deletePurchase(token, id){\r\n    return fetch(APIROOT + '/api/purchases/' + id + '/', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n    })\r\n  }\r\n\r\n  static getInventoryList(token){\r\n    return fetch(APIROOT + '/api/inventory/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    }).then(resp => resp.json())\r\n  }\r\n\r\n  static getOrderList(token){\r\n    return fetch(APIROOT + '/api/orders/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    }).then(resp => resp.json())\r\n  }\r\n\r\n  static getPrintingList(token){\r\n    return fetch(APIROOT + '/api/printing/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    }).then(resp => resp.json())\r\n  }\r\n\r\n  static getOrder(token, id){\r\n    return fetch(APIROOT + '/api/orders/' + id + '/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static addOrder(token, data){\r\n    return fetch(APIROOT + '/api/orders/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static deleteOrder(token, id){\r\n    return fetch(APIROOT + '/api/orders/' + id + '/', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n    })\r\n  }\r\n\r\n  static updateOrder(token, id, data){\r\n    return fetch(APIROOT + '/api/orders/' + id + '/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static getInvoiceList(token){\r\n    return fetch(APIROOT + '/api/invoices/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static getInvoice(token, id){\r\n    return fetch(APIROOT + '/api/invoices/' + id + '/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static generateInvoices(token, data){\r\n    return fetch(APIROOT + '/api/invoices/generate_invoices/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static uploadOrdersFile(token, data){\r\n    return fetch(APIROOT + '/api/orders/import_ordersfile/',\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n        headers: {\r\n          // 'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Token ${token}`\r\n        },\r\n\t\t\t\tbody: data,\r\n\t\t\t}\r\n\t\t)\r\n  }\r\n\r\n  static uploadShippingFile(token, data){\r\n    return fetch(APIROOT + '/api/orders/import_shippingfile/',\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n        headers: {\r\n          // 'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Token ${token}`\r\n        },\r\n\t\t\t\tbody: data,\r\n\t\t\t}\r\n\t\t)\r\n  }\r\n\r\n  static uploadPurchasesFile(token, data){\r\n    return fetch(APIROOT + '/api/purchases/import_file/',\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n        headers: {\r\n          // 'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Token ${token}`\r\n        },\r\n\t\t\t\tbody: data,\r\n\t\t\t}\r\n\t\t)\r\n  }\r\n\r\n  static uploadProductsFile(token, data){\r\n    return fetch(APIROOT + '/api/products/import_file/',\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n        headers: {\r\n          // 'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Token ${token}`\r\n        },\r\n\t\t\t\tbody: data,\r\n\t\t\t}\r\n\t\t)\r\n  }\r\n\r\n  static getOverview(token, data){\r\n    return fetch(APIROOT + '/api/orders/get_overview/',\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static signinUser(credentials){\r\n    return fetch(APIROOT + '/api-token-auth/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(credentials)\r\n    })\r\n  }\r\n\r\n  static getAccountDetails(token, id){\r\n    return fetch(APIROOT + '/api/accounts/' + id + '/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static updateProfile(token, id, data){\r\n    return fetch(APIROOT + '/api/accounts/update_profile/' + id + '/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n\r\n  static changePassword(token, id, data){\r\n    return fetch(APIROOT + '/api/accounts/change_password' + id + '/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n}"],"sourceRoot":""}